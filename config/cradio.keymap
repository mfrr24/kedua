// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define TYPE   0
#define SIGN   1
#define NAV    2
#define NUMB   3
#define OTHE   4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "TYPE";
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T    &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G    &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B    &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &kp LSHFT  &to 0    &kp SPACE  &to 1
            >;
        };

        num_layer {
            label = "SIGN";
            bindings = <
&kp ESC           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET  &kp ASTERISK  &kp BSPC
&kp TAB           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL    &kp SLASH             &none                  &none      &none         &kp ENTER
&kp LEFT_CONTROL  &kp N7        &kp N8        &kp N9        &kp MINUS    &to 3                 &to 4                  &kp COMMA  &kp PERIOD    &kp DELETE
                                              &kp LSHFT     &to 0        &kp SPACE             &to 2
            >;
        };

        code_layer {
            label = "NAV";
            bindings = <
&kp ESC           &kp EXCLAMATION  &kp AMPERSAND  &kp PIPE   &kp DOUBLE_QUOTES    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET         &kp ASTERISK  &kp BSPC
&kp TAB           &kp AT_SIGN      &kp DOLLAR     &kp SQT    &kp EQUAL            &kp SLASH             &kp LESS_THAN          &kp GREATER_THAN  &none         &kp ENTER
&kp LEFT_CONTROL  &none            &none          &none      &kp MINUS            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COMMA         &kp PERIOD    &kp DEL
                                                  &kp LSHFT  &to 0                &to 1                 &none
            >;
        };

        nav_layer {
            label = "NUMB";
            bindings = <
&kp PRINTSCREEN  &kp F2  &kp LS(F3)  &kp F4        &none    &none      &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &none
&kp TAB          &kp N4  &kp N5      &kp N6        &none    &none      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LEFT_GUI     &kp N7  &kp N8      &kp N9        &none    &none      &kp HOME        &none           &kp END          &none
                                     &kp LEFT_ALT  &to 0    &kp SPACE  &none
            >;
        };

        othe_layer {
            label = "OTHE";
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)    &kp LC(Y)  &kp LC(U)  &kp LC(I)  &kp LC(O)  &kp LC(P)
&kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)    &kp LC(H)  &kp LC(J)  &kp LC(K)  &kp LC(L)  &none
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)    &kp LC(N)  &kp LC(M)  &none      &none      &none
                                 &kp LSHFT  &to 0        &none      &none
            >;
        };
    };
};
